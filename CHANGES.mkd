# DaHelpers Changelog

## Dev

### Added `#truth()` method

Gives a better truthy and falsy.

### Added `#type()` method

This method is a replacement for `typeOf` function. It is able to correctly
tell the difference between array, object, date, regexp, and null.

### Added `#klass()` method

This method helps test and retrieve objects' constructors.

## Use `#type()` and `#klass()` everywhere

The old type-checking methods have been replaced by `#type()` and `#klass()`
calls. It seems these methods have proven their usefulness already. :)

## 0.2.3

### Fixed `#thousands()` breaking on undefined or null

The method will now gracefully return empty string if passed undefined or null.

### Added `#toArray()` method

This method it used to convert any non-array value into an array (forcing
array).

## 0.2.2

### Added `#escape()` method

This method escapes special HTML characters.

## 0.2.0

### Added `#extend()` method

The new jQuery-style `#extend()` method deep-copies properties from one or more
mixins to an object.

The `#clone()` method now uses `#extend()` under the hood and some of the
clone's logic has been moved to `#extend()`.

### `#propset()` now overwrites existing properties

As the heading says, propset now properly overwrites existing properties. If
you have depended on the previous wrong behavior, please fix your code before
updating to 0.2.0.

## 0.1.0

### Fixed aliasing code

The tag aliasing was broken after 0.0.2 refactor. This is now fixed.

### Added `#clone()` and `#rekey()` methods

These methods allow developers to clone objects or remap their property 
structure.

### Added `#walk()` and `#sweep()` methods

These methods allow developers to iterate object properties in various ways and
perform operations on them.

### Added `#props()` and `#propset()` methods

The `#props()` helper is used for retrieving deeply nested object properties
without the need for checking whether individual segments of the property tree
are defined.

The `#propset()` helper allows us to set deeply nested object properties at
once without having to manually create the intermediate structure.

### Refactored `#pad()` method

The `#pad()` method has been refactored to not depend on the same-named
variable in the outer scope for recursion.

## 0.0.2

Minor improvements to documentation and small refactor of tag aliases code.
